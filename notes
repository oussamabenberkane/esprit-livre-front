notes for tailwind css responsiveness : 
- use clamp function for text 
- breakpoints : exp sm(minimum):max-xl:bg-black-500
- aspect ration : aspect-video or aspect-[]
- custom breakpoints : hidden min-[..px]:block(visible)
- autofit for grids : className="grid [grid-templae-colums:repeat (auto-fit,_minmax(200px,_1fr))]"


1. Typography Responsiveness

<h1 class="text-xl sm:text-2xl md:text-4xl lg:text-6xl font-bold">
  Responsive Heading
</h1>
Default: text-xl
Small screens: text-2xl
Medium: text-4xl
Large: text-6xl


2. Responsive Width / columns

<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
  <div class="bg-red-300 p-4">Box 1</div>
  <div class="bg-blue-300 p-4">Box 2</div>
  <div class="bg-green-300 p-4">Box 3</div>
</div>
1 column on mobile
2 columns on tablet
3 columns on desktop


3. Flex Direction Switch

<div class="flex flex-col md:flex-row gap-4">
  <div class="bg-purple-300 flex-1 p-4">Left</div>
  <div class="bg-yellow-300 flex-1 p-4">Right</div>
</div>
Vertical stack on mobile
Side-by-side on desktop


4. Responsive Spacing

<div class="p-2 sm:p-4 lg:p-8 bg-gray-200">
  Padding changes with screen size
</div>


5. Show/Hide Elements

<p class="block md:hidden text-red-500">Mobile only</p>
<p class="hidden md:block text-green-500">Desktop only</p>


6. Fluid Typography (Modern v4)

<h2 class="text-[clamp(1rem,3vw (3% of viewport width),2.5rem)] font-semibold">
  Fluid Responsive Text
</h2>
Scales smoothly between 1rem and 2.5rem.


7. Aspect Ratio

<div class="aspect-video">
  <iframe src="https://www.youtube.com/embed/dQw4w9WgXcQ" class="w-full h-full"></iframe>
</div>
Always keeps a 16:9 ratio.


8. Container Queries (Advanced v4)

<div class="container max-w-lg cq-md:bg-blue-200 cq-lg:bg-green-200 p-4">
  <p>Background changes when the container itself grows.</p>
</div>
Unlike screen breakpoints, this reacts to parent container size.


9. Grid Auto-Fit (Responsive Cards)

<div class="grid grid-cols-[repeat(auto-fit,minmax(200px,1fr))] gap-4">
  <div class="bg-pink-300 p-4">Card 1</div>
  <div class="bg-pink-400 p-4">Card 2</div>
  <div class="bg-pink-500 p-4">Card 3</div>
  <div class="bg-pink-600 p-4">Card 4</div>
</div>
Cards auto-wrap depending on available width.


10. Clamp for Padding/Margins

<div class="p-[clamp(1rem,5vw,4rem)] bg-indigo-200">
  Fluid padding — grows with screen size.
</div>




what is left to do in homePage : 
- navbar responsiveness (see with ouss for the ) ---- check (il manque le design figma + qlq retouches)
- state management (add to cart and fav button) (azeka)



to do list assagui : 
- all books page 

  


Now I want to code the AllBooks page — here is the Figma mockup I designed for it.
I already have the navbar, footer, and BookCard components coded, so you don’t need to touch those. I just want to focus on:
* The filters section at the top (price, category, author, ISBN, language, and search button).
* The flex layout for displaying the books (grid layout using the BookCard components).
Requirements:
* Use Tailwind CSS and follow a mobile-first approach.
* Make everything fully responsive, scaling smoothly across breakpoints.
* Use my locally defined Tailwind variables with clamp() for paddings, margins, font sizes, widths, and heights.
* The overall page should have balanced horizontal padding and consistent vertical spacing between sections.
Layout specifications from the Figma mockup:
1. Filters Section
   * Displayed horizontally on desktop (filters aligned in one row) and stacked vertically on mobile.
   * Each filter (Price, Category, Author, ISBN, Language) should have consistent spacing and alignment.
   * The search button appears to the right of the filters on desktop, and below them on mobile.
   * The section has generous padding (use py-fluid-...).
   * Add a subtle bottom border or separator.
2. Books Grid
   * On desktop: 4 cards per row with equal gaps.
   * On tablet: 3 cards per row.
   * On mobile: 2 cards per row (centered if uneven).
   * Use gap-[clamp(1rem,2vw,2rem)] for consistent spacing.
   * Cards are responsive and maintain a uniform height (use flex-wrap or grid with auto-fit / minmax).
3. General layout
   * Keep a max-width container for large screens (like max-w-[1400px] mx-auto).
   * Maintain consistent spacing between filters, books grid, and footer (vertical spacing via mt-fluid-...).
   * Background should remain clean and minimal (white or light gray).
   * i also want to display a fixed number of cards based on the screen size, with a “See More” button to load the next page of books, and add a count subcomponent that shows the total number of books, current page, and total pages — similar to what you see on typical e-commerce websites.
4. Typography and spacing
   * Section title (“Frame” in the mockup) should be left-aligned and responsive (text-fluid-... font-semibold mb-fluid-...).
   * Use subtle hover effects on cards and filters (e.g., shadow or border highlight).

here is the figma mockup.

i want all the code in a single jsx file with tailwind classes, no extra code, no typescript.








